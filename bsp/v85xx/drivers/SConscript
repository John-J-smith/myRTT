import os
import rtconfig
from building import *

cwd = GetCurrentDir()

# add general drivers
src = Split('''
board.c
''')

# add gpio driver code
if GetDepend('BSP_USING_GPIO'):
    src = src + ['drv_gpio.c']
    
# add uart driver code
if GetDepend('BSP_USING_UART'):
    src = src + ['drv_uart.c']

# add i2c driver code
if GetDepend('BSP_USING_I2C'):
    src = src + ['drv_i2c.c']
    
# add spi driver code
if GetDepend('BSP_USING_SPI'):
    src = src + ['drv_spi.c']

# add eeprom driver code
if GetDepend('BSP_USING_EEPROM'):
    src = src + ['drv_eeprom.c']
    
# add data flash driver code
if GetDepend('BSP_USING_FLASH'):
    src = src + ['drv_flash.c']
    
# add watch dog driver code
if GetDepend('BSP_USING_WDT'):
    src = src + ['drv_wdt.c']
    
path =  [cwd]

if rtconfig.CROSS_TOOL == 'gcc':
    src += [cwd + '/../libraries/Config/IAR/startup_target_noload.s']
elif rtconfig.CROSS_TOOL == 'keil':
    src += [cwd + '/../libraries/Config/IAR/startup_target_noload.s']
elif rtconfig.CROSS_TOOL == 'iar':
    src += [cwd + '/../libraries/Config/IAR/startup_target_noload.s']

# HT8510 || HT8530
# You can select chips from the list above
CPPDEFINES = ['V8510']
group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)
Return('group')
